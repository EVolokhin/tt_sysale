{"version":3,"sources":["Components/CardControl/CardControl.jsx","Components/CardInfo/CardInfo.jsx","Components/Card/Card.jsx","Components/CardsList/CardList.jsx","App.jsx","index.jsx"],"names":["CardControl","id","useState","goodsId","count","setCount","color","setColor","volume","setVolume","price","setPrice","totalPrice","setTotalPrice","dropActive","setDropActive","useEffect","handleCount","event","target","handleColor","innerText","handleVolumeChange","value","className","onClick","aria-hidden","onMouseLeave","src","alt","type","name","defaultChecked","onChange","htmlFor","order","console","log","CardInfo","Card","picture","products","CardsList","map","product","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df66513f.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CardControl = ({ id }) => {\n  const [goodsId] = useState(id);\n  const [count, setCount] = useState(1);\n  const [color, setColor] = useState('Цвет');\n  const [volume, setVolume] = useState(null);\n  const [price, setPrice] = useState(200);\n  const [totalPrice, setTotalPrice] = useState(price);\n  const [dropActive, setDropActive] = useState(false);\n\n  useEffect(() => {\n    setTotalPrice(price * count);\n  }, [price]);\n\n  const handleCount = (event) => {\n    if (event.target.id === 'increase') {\n      setCount(count + 1);\n      setTotalPrice((count + 1) * price);\n    }\n\n    if (event.target.id === 'decrease') {\n      if (count === 1) {\n        return;\n      }\n\n      setCount(count - 1);\n      setTotalPrice((count - 1) * price);\n    }\n  };\n\n  const handleColor = (event) => {\n    setColor(event.target.innerText);\n    setDropActive(false);\n  };\n\n  const handleVolumeChange = (event) => {\n    setVolume(event.target.value);\n    switch (event.target.value) {\n      case '200':\n        setPrice('350');\n        break;\n      case '300':\n        setPrice('500');\n        break;\n\n      default:\n        setPrice('200');\n        break;\n    }\n  };\n\n  const handleDrop = () => {\n    setDropActive(!dropActive);\n  };\n\n  const sendOrder = () => {\n    const order = {\n      goodsId,\n      count,\n      color,\n      volume,\n      price,\n      totalPrice,\n    };\n\n    console.log(order);\n\n    return order;\n  };\n\n  return (\n    <div className=\"card__control\">\n      <div className=\"card__row\">\n        <div\n          className=\"card__color\"\n          onClick={handleDrop}\n          aria-hidden=\"true\"\n          onMouseLeave={() => {\n            setDropActive(false);\n          }}\n        >\n          <p>{color}</p>\n          <img\n            className=\"card__color-icon\"\n            src=\"./images/v1.svg\"\n            alt=\"choose color\"\n          />\n          <div\n            className={dropActive\n              ? 'card__color-dropdown active'\n              : 'card__color-dropdown'}\n            onMouseLeave={() => {\n              setDropActive(false);\n            }}\n          >\n            <p\n              onClick={handleColor}\n              aria-hidden=\"true\"\n            >\n              Желтый\n            </p>\n            <p\n              onClick={handleColor}\n              aria-hidden=\"true\"\n            >\n              Красный\n            </p>\n            <p\n              onClick={handleColor}\n              aria-hidden=\"true\"\n            >\n              Зеленый\n            </p>\n          </div>\n        </div>\n        <p className=\"card__price\">{`${totalPrice} грн`}</p>\n      </div>\n      <div className=\"card__volumes\">\n        <div className=\"card__volume\">\n\n          <input\n            type=\"radio\"\n            name={id}\n            value=\"100\"\n            id={`${id}100`}\n            defaultChecked\n            onChange={handleVolumeChange}\n          />\n          <label htmlFor={`${id}100`}>100 мл</label>\n        </div>\n        <div className=\"card__volume\">\n          <input\n            type=\"radio\"\n            name={id}\n            value=\"200\"\n            id={`${id}200`}\n            onChange={handleVolumeChange}\n          />\n          <label htmlFor={`${id}200`}>200 мл</label>\n        </div>\n        <div className=\"card__volume\">\n          <input\n            type=\"radio\"\n            name={id}\n            value=\"300\"\n            id={`${id}300`}\n            onChange={handleVolumeChange}\n          />\n          <label htmlFor={`${id}300`}>300 мл</label>\n        </div>\n      </div>\n      <div className=\"card__row\">\n        <div className=\"card__count\">\n          <button\n            type=\"button\"\n            id=\"decrease\"\n            className=\"card__count-button\"\n            onClick={handleCount}\n          >\n            -\n          </button>\n          <span className=\"card__count-input\">\n            {count}\n          </span>\n          <button\n            type=\"button\"\n            id=\"increase\"\n            className=\"card__count-button\"\n            onClick={handleCount}\n          >\n            +\n          </button>\n        </div>\n        <button\n          type=\"button\"\n          className=\"card__buy\"\n          onClick={sendOrder}\n        >\n          Купить\n        </button>\n      </div>\n    </div>\n\n  );\n};\n\nCardControl.propTypes = {\n  id: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nexport const CardInfo = () => (\n  <>\n    <p className=\"card__title\">Шампунь</p>\n    <p className=\"card__description\">\n      Lorem ipsum dolor sit amet\n      consectetur adipiscing elit,\n      sed do eiusmod tempor incididunt\n      ut labore et dolore magna aliqua.\n      Ut enim ad minim veniam, quis nostrud exercitation ullamco.\n    </p>\n  </>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardControl } from '../CardControl/CardControl';\nimport { CardInfo } from '../CardInfo/CardInfo';\n\nimport './card.scss';\n\nexport const Card = ({ id, picture }) => (\n  <div className=\"card\">\n    <p className=\"card__logo\">new</p>\n    <button className=\"card__compare\" type=\"button\">\n      <img\n        className=\"card__compare-image\"\n        alt=\"compare\"\n        src=\"./images/v3.svg\"\n      />\n    </button>\n    <div>\n      <img\n        className=\"card__image\"\n        alt=\"product\"\n        src={picture}\n      />\n    </div>\n    <CardInfo />\n\n    <CardControl id={id} />\n  </div>\n);\n\nCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  picture: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Card } from '../Card/Card';\nimport './cardList.scss';\n\nconst products = [\n  {\n    id: 1,\n    picture: './images/image23.svg',\n\n  },\n  {\n    id: 2,\n    picture: './images/group618.svg',\n\n  },\n  {\n    id: 3,\n    picture: './images/image25.svg',\n\n  },\n];\n\nexport const CardsList = () => (\n  <div className=\"container\">\n    {products.map(product => (\n      <Card\n        id={product.id}\n        picture={product.picture}\n        key={product.id}\n      />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport { CardsList } from './Components/CardsList/CardList';\n\nexport const App = () => (\n  <div>\n    <CardsList />\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}